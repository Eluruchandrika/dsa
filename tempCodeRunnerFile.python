# Python3 program to find the height of a tree 

# A binary tree node 
class Node: 

	# Constructor to create a new node 
	def __init__(self, data): 
		self.key = data 
		self.left = None
		self.right = None

# Function to find height of tree 
def height(root): 
	# Base Case 
	if root is None: 
		return 0

	# Create an empty queue for level order traversal 
	q = [] 

	# Enqueue Root and initialize height 
	q.append(root) 
	height = 0

	# Loop while queue is not empty 
	while q: 

		# nodeCount (queue size) indicates number of nodes 
		# at current level 
		nodeCount = len(q) 

		# Dequeue all nodes of current level and Enqueue all 
		# nodes of next level 
		while nodeCount > 0: 
			node = q.pop(0) 
			if node.left is not None: 
				q.append(node.left) 
			if node.right is not None: 
				q.append(node.right) 
			nodeCount -= 1
		height += 1

	return height 

# Driver Code 
root = Node(1) 
root.left = Node(2) 
root.right = Node(3) 
root.left.left = Node(4) 
root.left.right = Node(5) 

print("Height(Depth) of tree is", height(root))
